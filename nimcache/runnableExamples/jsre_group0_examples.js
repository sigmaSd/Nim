/* Generated by the Nim Compiler v1.7.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555913 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555124.base = NTI33555113;
var NNI33555913 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554440, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554440, name: "Field2", sons: null}]};
NTI33555913.node = NNI33555913;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557135, src_33557136, ti_33557137) {
  var result_33557146 = null;

    switch (ti_33557137.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557126(ti_33557137))) {
      result_33557146 = src_33557136;
      }
      else {
        result_33557146 = [src_33557136[0], src_33557136[1]];
      }
      
      break;
    case 19:
            if (dest_33557135 === null || dest_33557135 === undefined) {
        dest_33557135 = {};
      }
      else {
        for (var key in dest_33557135) { delete dest_33557135[key]; }
      }
      for (var key in src_33557136) { dest_33557135[key] = src_33557136[key]; }
      result_33557146 = dest_33557135;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557137.base == null))) {
      result_33557146 = nimCopy(dest_33557135, src_33557136, ti_33557137.base);
      }
      else {
      if ((ti_33557137.kind == 17)) {
      result_33557146 = (dest_33557135 === null || dest_33557135 === undefined) ? {m_type: ti_33557137} : dest_33557135;
      }
      else {
        result_33557146 = (dest_33557135 === null || dest_33557135 === undefined) ? {} : dest_33557135;
      }
      }
      nimCopyAux(result_33557146, src_33557136, ti_33557137.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557136)) { 
        if(dest_33557135 === null || dest_33557135 === undefined || dest_33557135.length != src_33557136.length) {
          dest_33557135 = new src_33557136.constructor(src_33557136);
        } else {
          dest_33557135.set(src_33557136, 0);
        }
        result_33557146 = dest_33557135;
      } else {
        if (src_33557136 === null) {
          result_33557146 = null;
        }
        else {
          if (dest_33557135 === null || dest_33557135 === undefined || dest_33557135.length != src_33557136.length) {
            dest_33557135 = new Array(src_33557136.length);
          }
          result_33557146 = dest_33557135;
          for (var i = 0; i < src_33557136.length; ++i) {
            result_33557146[i] = nimCopy(result_33557146[i], src_33557136[i], ti_33557137.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557136 === null) {
        result_33557146 = null;
      }
      else {
        if (dest_33557135 === null || dest_33557135 === undefined || dest_33557135.length != src_33557136.length) {
          dest_33557135 = new Array(src_33557136.length);
        }
        result_33557146 = dest_33557135;
        for (var i = 0; i < src_33557136.length; ++i) {
          result_33557146[i] = nimCopy(result_33557146[i], src_33557136[i], ti_33557137.base);
        }
      }
    
      break;
    case 28:
            if (src_33557136 !== null) {
        result_33557146 = src_33557136.slice(0);
      }
    
      break;
    default: 
      result_33557146 = src_33557136;
      break;
    }

  return result_33557146;

}

function makeNimstrLit(c_33556796) {
      var result = [];
  for (var i = 0; i < c_33556796.length; ++i) {
    result[i] = c_33556796.charCodeAt(i);
  }
  return result;
  

  
}

function arrayConstr(len_33557174, value_33557175, typ_33557176) {
        var result = new Array(len_33557174);
    for (var i = 0; i < len_33557174; ++i) result[i] = nimCopy(null, value_33557175, typ_33557176);
    return result;
  

  
}

function mnewString(len_33556888) {
        return new Array(len_33556888);
  

  
}

function addInt(a_33556935, b_33556936) {
        var result = a_33556935 + b_33556936;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557184, a_33557185, b_33557186) {
  var result_33557187 = 0;

  BeforeRet: {
    if (((a_33557185 <= i_33557184) && (i_33557184 <= b_33557186))) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557187;

}

function chckIndx(i_33557179, a_33557180, b_33557181) {
  var result_33557182 = 0;

  BeforeRet: {
    if (((a_33557180 <= i_33557179) && (i_33557179 <= b_33557181))) {
    result_33557182 = i_33557179;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557179, a_33557180, b_33557181);
    }
    
  };

  return result_33557182;

}

function cstrToNimstr(c_33556799) {
      var ln = c_33556799.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556799.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556799.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556802) {
  var result_33556803 = null;

    var res_33556837 = newSeq_33556820((s_33556802).length);
    var i_33556838 = 0;
    var j_33556839 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556838 < (s_33556802).length)) break Label2;
          var c_33556840 = s_33556802[i_33556838];
          if ((c_33556840 < 128)) {
          res_33556837[j_33556839] = String.fromCharCode(c_33556840);
          i_33556838 += 1;
          }
          else {
            var helper_33556852 = newSeq_33556820(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556853 = c_33556840.toString(16);
                  if ((((code_33556853) == null ? 0 : (code_33556853).length) == 1)) {
                  helper_33556852.push("%0");;
                  }
                  else {
                  helper_33556852.push("%");;
                  }
                  
                  helper_33556852.push(code_33556853);;
                  i_33556838 += 1;
                  if ((((s_33556802).length <= i_33556838) || (s_33556802[i_33556838] < 128))) {
                  break Label3;
                  }
                  
                  c_33556840 = s_33556802[i_33556838];
                }
            };
++excHandler;
            try {
            res_33556837[j_33556839] = decodeURIComponent(helper_33556852.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556837[j_33556839] = helper_33556852.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556839 += 1;
        }
    };
    if (res_33556837.length < j_33556839) { for (var i = res_33556837.length ; i < j_33556839 ; ++i) res_33556837.push(null); }
               else { res_33556837.length = j_33556839; };
    result_33556803 = res_33556837.join("");

  return result_33556803;

}

function raiseException(e_33556662, ename_33556663) {
    e_33556662.name = ename_33556663;
    if ((excHandler == 0)) {
    unhandledException(e_33556662);
    }
    
    e_33556662.trace = nimCopy(null, rawWriteStackTrace_33556626(), NTI33554439);
    throw e_33556662;

  
}

function subInt(a_33556939, b_33556940) {
        var result = a_33556939 - b_33556940;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33556926, b_33556927) {
        if (a_33556926 == b_33556927) return true;
    if (a_33556926 === null && b_33556927.length == 0) return true;
    if (b_33556927 === null && a_33556926.length == 0) return true;
    if ((!a_33556926) || (!b_33556927)) return false;
    var alen = a_33556926.length;
    if (alen != b_33556927.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556926[i] != b_33556927[i]) return false;
    return true;
  

  
}
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_1", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function contains_603979821(pattern_603979822, self_603979823) {
  var result_603979824 = false;

  var F = {procname: "jsre.contains", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 58;
    result_603979824 = self_603979823.test(pattern_603979822);
  framePtr = F.prev;

  return result_603979824;

}

function isFatPointer_33557126(ti_33557127) {
  var result_33557128 = false;

  BeforeRet: {
    result_33557128 = !((ConstSet1[ti_33557127.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557128;

}

function nimCopyAux(dest_33557139, src_33557140, n_33557141) {
    switch (n_33557141.kind) {
    case 0:
      break;
    case 1:
            dest_33557139[n_33557141.offset] = nimCopy(dest_33557139[n_33557141.offset], src_33557140[n_33557141.offset], n_33557141.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557141.sons.length; i++) {
      nimCopyAux(dest_33557139, src_33557140, n_33557141.sons[i]);
    }
    
      break;
    case 3:
            dest_33557139[n_33557141.offset] = nimCopy(dest_33557139[n_33557141.offset], src_33557140[n_33557141.offset], n_33557141.typ);
      for (var i = 0; i < n_33557141.sons.length; ++i) {
        nimCopyAux(dest_33557139, src_33557140, n_33557141.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556414(x_33556415, x_33556415_Idx, y_33556416) {
          if (x_33556415[x_33556415_Idx] === null) { x_33556415[x_33556415_Idx] = []; }
      var off = x_33556415[x_33556415_Idx].length;
      x_33556415[x_33556415_Idx].length += y_33556416.length;
      for (var i = 0; i < y_33556416.length; ++i) {
        x_33556415[x_33556415_Idx][off+i] = y_33556416.charCodeAt(i);
      }
    

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556933) {
        if (a_33556933 > 2147483647 || a_33556933 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556749, a_33556750, b_33556751) {
    var Temporary1;

    if ((b_33556751 < a_33556750)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_318767112(i_33556749) || [],makeNimstrLit(" not in ") || [],HEX24_318767112(a_33556750) || [],makeNimstrLit(" .. ") || [],HEX24_318767112(b_33556751) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    F.line = 44;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: {
      F.line = 46;
      var iHEX60gensym4_251658435 = 0;
      F.line = 119;
      var i_587202589 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_587202589 < n_251658420)) break Label3;
            F.line = 49;
            iHEX60gensym4_251658435 = i_587202589;
            F.line = 49;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            F.line = 122;
            i_587202589 = addInt(i_587202589, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));
  framePtr = F.prev;

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 113;
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));
  framePtr = F.prev;

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 117;
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);
  framePtr = F.prev;

  
}

function HEX24_318767112(x_318767113) {
  var result_318767114 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    addInt_251658457(result_318767114, 0, x_318767113);
  framePtr = F.prev;

  return result_318767114[0];

}

function auxWriteStackTrace_33556554(f_33556555) {
  var result_33556556 = [[]];

    var it_33556564 = f_33556555;
    var i_33556565 = 0;
    var total_33556566 = 0;
    var tempFrames_33556567 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555913);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556564 == null)) && (i_33556565 <= 63))) break Label2;
          tempFrames_33556567[i_33556565].Field0 = it_33556564.procname;
          tempFrames_33556567[i_33556565].Field1 = it_33556564.line;
          tempFrames_33556567[i_33556565].Field2 = it_33556564.filename;
          i_33556565 += 1;
          total_33556566 += 1;
          it_33556564 = it_33556564.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556564 == null))) break Label4;
          total_33556566 += 1;
          it_33556564 = it_33556564.prev;
        }
    };
    result_33556556[0] = nimCopy(null, [], NTI33554439);
    if (!((total_33556566 == i_33556565))) {
    result_33556556[0].push.apply(result_33556556[0], makeNimstrLit("("));;
    result_33556556[0].push.apply(result_33556556[0], HEX24_318767112((total_33556566 - i_33556565)));;
    result_33556556[0].push.apply(result_33556556[0], makeNimstrLit(" calls omitted) ...\x0A"));;
    }
    
    Label5: {
      var j_33556597 = 0;
      var colontmp__587202581 = 0;
      colontmp__587202581 = (i_33556565 - 1);
      var res_587202583 = colontmp__587202581;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_587202583)) break Label7;
            j_33556597 = res_587202583;
            result_33556556[0].push.apply(result_33556556[0], cstrToNimstr(tempFrames_33556567[j_33556597].Field2));;
            if ((0 < tempFrames_33556567[j_33556597].Field1)) {
            result_33556556[0].push.apply(result_33556556[0], makeNimstrLit("("));;
            addInt_251658457(result_33556556, 0, tempFrames_33556567[j_33556597].Field1);
            if (false) {
            result_33556556[0].push.apply(result_33556556[0], makeNimstrLit(", "));;
            addInt_251658457(result_33556556, 0, 0);
            }
            
            result_33556556[0].push.apply(result_33556556[0], makeNimstrLit(")"));;
            }
            
            result_33556556[0].push.apply(result_33556556[0], makeNimstrLit(" at "));;
            add_33556414(result_33556556, 0, tempFrames_33556567[j_33556597].Field0);
            result_33556556[0].push.apply(result_33556556[0], makeNimstrLit("\x0A"));;
            res_587202583 -= 1;
          }
      };
    };

  return result_33556556[0];

}

function rawWriteStackTrace_33556626() {
  var result_33556627 = [];

    if (!((framePtr == null))) {
    result_33556627 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(auxWriteStackTrace_33556554(framePtr) || []), NTI33554439);
    }
    else {
      result_33556627 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI33554439);
    }
    

  return result_33556627;

}

function newSeq_33556820(len_33556822) {
  var result_33556823 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 693;
    result_33556823 = new Array(len_33556822); for (var i = 0 ; i < len_33556822 ; ++i) { result_33556823[i] = null; }  framePtr = F.prev;

  return result_33556823;

}

function unhandledException(e_33556658) {
    var buf_33556659 = [[]];
    if (!(((e_33556658.message).length == 0))) {
    buf_33556659[0].push.apply(buf_33556659[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556659[0].push.apply(buf_33556659[0], e_33556658.message);;
    }
    else {
    buf_33556659[0].push.apply(buf_33556659[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556659[0].push.apply(buf_33556659[0], makeNimstrLit(" ["));;
    add_33556414(buf_33556659, 0, e_33556658.name);
    buf_33556659[0].push.apply(buf_33556659[0], makeNimstrLit("]\x0A"));;
    buf_33556659[0].push.apply(buf_33556659[0], rawWriteStackTrace_33556626());;
    var cbuf_33556660 = toJSStr(buf_33556659[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556660);
  }
  else {
    throw cbuf_33556660;
  }
  

  
}

function sysFatal_218103842(message_218103845) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_218103840(msg_218103841) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 34;
    sysFatal_218103842(msg_218103841);
  framePtr = F.prev;

  
}

function failedAssertImpl_218103864(msg_218103865) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 44;
    raiseAssert_218103840(msg_218103865);
  framePtr = F.prev;

  
}
var F = {procname: "module jsre_examples_1", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim", line: 0};
framePtr = F;
F.line = 53;
var jsregex_587202562 = new RegExp("bc$", "i");
if (!(contains_603979821("abc", jsregex_587202562))) {
F.line = 53;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim(9, 10) `jsregex in r\"abc\"` "));
}

if (!(!(contains_603979821("abcd", jsregex_587202562)))) {
F.line = 53;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim(10, 10) `jsregex notin r\"abcd\"` "));
}

if (!(contains_603979821("xabc", jsregex_587202562))) {
F.line = 53;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim(11, 10) `\"xabc\".contains jsregex` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_1", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_1", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_2", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function startsWith_603979825(pattern_603979826, self_603979827) {
  var result_603979828 = false;

  var F = {procname: "jsre.startsWith", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 61;
    result_603979828 = contains_603979821(pattern_603979826, new RegExp(toJSStr((makeNimstrLit("^") || []).concat(cstrToNimstr(self_603979827.source) || [])), self_603979827.flags));
  framePtr = F.prev;

  return result_603979828;

}
var F = {procname: "module jsre_examples_2", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim", line: 0};
framePtr = F;
F.line = 62;
var jsregex_620756994 = new RegExp("abc", "i");
if (!(startsWith_603979825("abcd", jsregex_620756994))) {
F.line = 62;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim(9, 10) `\"abcd\".startsWith jsregex` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_2", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_2", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_3", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function endsWith_603979838(pattern_603979839, self_603979840) {
  var result_603979841 = false;

  var F = {procname: "jsre.endsWith", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 68;
    result_603979841 = contains_603979821(pattern_603979839, new RegExp(toJSStr((cstrToNimstr(self_603979840.source) || []).concat(makeNimstrLit("$") || [])), self_603979840.flags));
  framePtr = F.prev;

  return result_603979841;

}
var F = {procname: "module jsre_examples_3", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim", line: 0};
framePtr = F;
F.line = 69;
var jsregex_637534210 = new RegExp("bcd", "i");
if (!(endsWith_603979838("abcd", jsregex_637534210))) {
F.line = 69;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim(9, 10) `\"abcd\".endsWith jsregex` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_3", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_3", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_4", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function HEX3DHEX3D_654311436(x_654311438, y_654311439) {
  var result_654311440 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 301;
    var sameObject_654311448 = false;
    F.line = 302;
    sameObject_654311448 = x_654311438 === y_654311439
    if (sameObject_654311448) {
    F.line = 303;
    result_654311440 = true;
    break BeforeRet;
    }
    
    if (!(((x_654311438).length == (y_654311439).length))) {
    F.line = 306;
    result_654311440 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 308;
      var i_654311462 = 0;
      F.line = 75;
      var colontmp__654311544 = 0;
      F.line = 308;
      colontmp__654311544 = subInt((x_654311438).length, 1);
      F.line = 90;
      var res_654311546 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_654311546 <= colontmp__654311544)) break Label3;
            F.line = 308;
            i_654311462 = res_654311546;
            if (!((x_654311438[chckIndx(i_654311462, 0, (x_654311438).length - 1)] == y_654311439[chckIndx(i_654311462, 0, (y_654311439).length - 1)]))) {
            F.line = 310;
            result_654311440 = false;
            break BeforeRet;
            }
            
            F.line = 93;
            res_654311546 = addInt(res_654311546, 1);
          }
      };
    };
    F.line = 312;
    result_654311440 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_654311440;

}

function HEX24_603979818(self_603979819) {
  var result_603979820 = [];

  var F = {procname: "jsre.$", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 49;
    result_603979820 = nimCopy(null, cstrToNimstr(self_603979819.toString()), NTI33554439);
  framePtr = F.prev;

  return result_603979820;

}
var F = {procname: "module jsre_examples_4", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
framePtr = F;
F.line = 75;
var jsregex_654311426 = new RegExp("\\s+", "i");
F.line = 75;
jsregex_654311426.compile("\\w+", "i");
if (!(contains_603979821("nim javascript", jsregex_654311426))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(10, 10) `\"nim javascript\".contains jsregex` "));
}

if (!(HEX3DHEX3D_654311436((jsregex_654311426.exec("nim javascript") || []), ["nim"]))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(11, 10) `jsregex.exec(r\"nim javascript\") == @[\"nim\".cstring]` "));
}

if (!((jsregex_654311426.toString() == "/\\w+/i"))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(12, 10) `jsregex.toCstring() == r\"/\\w+/i\"` "));
}

F.line = 75;
jsregex_654311426.compile("[0-9]", "i");
if (!(contains_603979821("0123456789abcd", jsregex_654311426))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(14, 10) `\"0123456789abcd\".contains jsregex` "));
}

if (!(eqStrings(HEX24_603979818(jsregex_654311426), makeNimstrLit("/[0-9]/i")))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(15, 10) `$jsregex == \"/[0-9]/i\"` "));
}

F.line = 75;
jsregex_654311426.compile("abc", "i");
if (!(startsWith_603979825("abcd", jsregex_654311426))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(17, 10) `\"abcd\".startsWith jsregex` "));
}

if (!(endsWith_603979838("dabc", jsregex_654311426))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(18, 10) `\"dabc\".endsWith jsregex` "));
}

F.line = 75;
jsregex_654311426.compile("\\d", "i");
if (!(HEX3DHEX3D_654311436(("do1ne".split(jsregex_654311426) || []), ["do", "ne"]))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(20, 10) `\"do1ne\".split(jsregex) == @[\"do\".cstring, \"ne\".cstring]` "));
}

F.line = 75;
jsregex_654311426.compile("[lw]", "i");
if (!(("hello world".replace(jsregex_654311426, "X") == "heXlo world"))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(22, 10) `\"hello world\".replace(jsregex, \"X\") == \"heXlo world\"` "));
}

F.line = 75;
var digitsRegex_654311511 = new RegExp("\\d");
if (!(HEX3DHEX3D_654311436(("foo".match(digitsRegex_654311511) || []), []))) {
F.line = 75;
failedAssertImpl_218103864(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(24, 10) `\"foo\".match(digitsRegex) == @[]` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_4", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_examples_4", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
